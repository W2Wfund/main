@model WayWealth.Areas.lk.ViewModels.Home.WithdrawView
@using KBTech.Integration.Merchant.CoinBase
@{
    ViewBag.Title = Resources.Resource.WithdrawalTitle;
    Layout = "~/Areas/lk/Views/Shared/_Layout.cshtml";
    TempData.Keep();
}
<script>
   addresses = {
        "BTC": "@(TempData["w_btc"])",
        "ETH": "@(TempData["w_eth"])",
        "LTC": "@(TempData["w_ltc"])",
        "BCH": "@(TempData["w_bch"])",
        "XRP": "@(TempData["w_xrp"])",
        "USDT": "@(TempData["w_usdt"])"
    };
</script>

<div class="white-bg h-100">
    <div class="container">
        <div class="perevod-block">
            <h2 class="inner-title">
                @Resources.Resource.WithdrawalTitle
            </h2>

            <div class="error-msg" style="margin: 0 0 30px 0;">
                @Html.ValidationSummary(false)
            </div>

            @using (Html.BeginForm("Withdraw", "Home", FormMethod.Post, new { id = "form_vivod" }))
            {
            <div class="valuta">
                <div>
                    <img src="~/Areas/lk/Content/img/valuta-1.png" alt="">
                    <p>Bitcoin</p>
                    <b>$ @(Convert.ToDecimal(TempData["btc_usd"]).ToString("N2"))</b>
                </div>
                <div>
                    <img src="~/Areas/lk/Content/img/valuta-2.png" alt="">
                    <p>Ethereum</p>
                    <b>$ @(Convert.ToDecimal(TempData["eth_usd"]).ToString("N2"))</b>
                </div>
                <div>
                    <img src="~/Areas/lk/Content/img/valuta-3.png" alt="">
                    <p>Litecoin</p>
                    <b>$ @(Convert.ToDecimal(TempData["ltc_usd"]).ToString("N2"))</b>
                </div>
                <div>
                    <img src="~/Areas/lk/Content/img/valuta-4.png" alt="">
                    <p>Bitcoin Cash</p>
                    <b>$ @(Convert.ToDecimal(TempData["bch_usd"]).ToString("N2"))</b>
                </div>
                <div>
                    <img src="~/Areas/lk/Content/img/valuta-5.png" alt="">
                    <p>Ripple</p>
                    <b>$ @(Convert.ToDecimal(TempData["xrp_usd"]).ToString("N2"))</b>
                </div>
                <div>
                    <img src="~/Areas/lk/Content/img/tether.png" alt="">
                    <p>Tether</p>
                    <b>$ @(Convert.ToDecimal(TempData["usdt_usd"]).ToString("N2"))</b>
                </div>
            </div>
                <div class="transfer-bg-form">
                    <div class="dostupno flex">
                        <p>
                            @Resources.Resource.AvailableTranslation
                        </p>
                        <b>$ <span class="reminder">@(Convert.ToDouble(TempData["Остаток.ВнутреннийСчет"]).ToString("N2"))</span></b>
                    </div>
                    <div class="flex transfer-bg-flex">
                        <div>
                            <div class="form-group">
                                <label>@Resources.Resource.Amount</label>
                                <div class="flex">
                                    @Html.TextBoxFor(x => x.Sum, new { @class = "sum_input" })
                                    <a class="btn btn-bordered btn-sm m-l-10 js_transfer_all_sum">
                                        <i class="ion-ios-arrow-round-back"></i>@Resources.Resource.WholeAmountBtn
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div>
                            <div class="form-group">
                                <label>@Resources.Resource.Currency</label>
                                <div class="form-group-select">
                                    @Html.DropDownListFor(x => x.Currency, new SelectListItem[]
                                {
                                    new SelectListItem { Text = "Bitcoin",Value = "BTC"},
                                    new SelectListItem { Text = "Ethereum",Value = "ETH"},
                                    new SelectListItem { Text = "Litecoin",Value = "LTC"},
                                    new SelectListItem { Text = "BitcoinCash",Value = "BCH"},
                                    new SelectListItem { Text = "Ripple",Value = "XRP"},
                                    new SelectListItem { Text = "Tether",Value = "USDT"},
                                }, Resources.Resource.NotChosen, new { id = "crypptoaccount", @class = "myslimSelect5" })
                                    <i class="ion-ios-arrow-down"></i>
                                </div>
                                <script>
                                    $('.myslimSelect5').change(function () {
                                        calc();
                                    });

                                    $('.sum_input').on('input change paste', calc);
                                    $('.js_transfer_all_sum').on('click', calc);

                                    function calc() {
                                        $('.crypptoconvert').html('');
                                        var s = $('.sum_input').val().replace(',', '.');
                                        var rate = 0.0;

                                        var curr = $("option:selected", $('#crypptoaccount')).attr('value');

                                        if (curr == 'BTC') {
                                            rate = @(TempData["usd_btc"].ToString().Replace(',','.')) * 1.0;
                                        }
                                        else if (curr == 'ETH') {
                                            rate = @(TempData["usd_eth"].ToString().Replace(',', '.')) * 1.0;
                                        }
                                        else if (curr == 'LTC') {
                                            rate = @(TempData["usd_ltc"].ToString().Replace(',', '.')) * 1.0;
                                        }
                                        else if (curr == 'BCH') {
                                            rate = @(TempData["usd_bch"].ToString().Replace(',', '.')) * 1.0;
                                        }
                                        else if (curr == 'XRP') {
                                            rate = @(TempData["usd_xrp"].ToString().Replace(',', '.')) * 1.0;
                                        }
                                        else if (curr == 'USDT') {
                                            rate = @(TempData["usd_usdt"].ToString().Replace(',', '.')) * 1.0;
                                        }

                                        if (addresses) {
                                            $('#inp_address').val(addresses[curr]);
                                        }

                                        var total = Math.round(s * rate * 1000000) / 1000000;
                                        if (total > 0) {
                                            $('.crypptoconvert').html(total + ' ' + '<span>' + curr + '</span>');
                                        }
                                    }
                                </script>
                            </div>
                        </div>
                    </div>
                    <div class="flex transfer-bg-flex">
                        <div>
                            <div class="form-group">
                                <label>@Resources.Resource.FinancPass</label>
                                <div class="flex">
                                    @Html.PasswordFor(x => x.Password)
                                    <a class="btn btn-bordered btn-sm m-l-10" id="gentp">@Resources.Resource.GetPassBtn</a>
                                </div>
                                <div class="sms">
                                    <p>@Resources.Resource.EmailRequiredSms1</p>
                                    <p>@Resources.Resource.EmailRequiredSms2 <strong class="timer">00:00:00</strong></p>
                                </div>
                            </div>
                        </div>
                        <div>
                            <div class="form-group">
                                <label>@Resources.Resource.WalletAddress</label>
                                @Html.TextBoxFor(x => x.WalletAddress, new { id = "inp_address" })
                            </div>
                        </div>
                    </div>
                    <p class="price crypptoconvert"></p>
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-grad" form="form_vivod">
                        @Resources.Resource.WithdrawBtn
                    </button>
                </div>
            }
        </div>
    </div>
</div>