@using WayWealth.Areas.lk.Helpers
@model WayWealth.Areas.lk.ViewModels.Home.HistoryView
@{
    ViewBag.Title = Resources.Resource.OperationsHistoryTitle;
    Layout = "~/Areas/lk/Views/Shared/_Layout.cshtml";
    var articles = ViewBag.Articles as IEnumerable<W2W.ModelKBT.Entities.DictItem>;
}
<div class="white-bg h-100">
    <div class="container">
        <div class="history-block">
            <h2 class="inner-title">
                @Resources.Resource.OperationsHistoryTitle
            </h2>

            <div class="filter-block">
                <a class="filter-block-btn btn btn-bordered btn-sm m-b-30">
                    <i class="ion-ios-options"></i><span>@Resources.Resource.Filtres</span>
                </a>
                @using (Html.BeginForm("history", "home", FormMethod.Post, new { id = "form_filter", @class = "form_flex" }))
                {
                    <div class="form-group">
                        <label>@Resources.Resource.Account</label>
                        <div class="form-group-select">
                            @Html.DropDownListFor(x => x.account, new[]{
                                new SelectListItem {Text = Resources.Resource.ShowAll, Value = "all"},
                                new SelectListItem {Text = Resources.Resource.FPersonalAccount, Value = "Остаток.ВнутреннийСчет"},
                                new SelectListItem {Text = Resources.Resource.FInvestmentAccount, Value = "Остаток.ИнвестиционныйСчет"},
                                new SelectListItem {Text = Resources.Resource.FInvestInterest, Value = "Остаток.Проценты"},
                                new SelectListItem {Text = Resources.Resource.FMarketingRewards, Value = "Остаток.Вознаграждения"},
                            }, new { @class = "myslimSelect2" })
                            <i class="ion-ios-arrow-down"></i>
                        </div>
                        <script>
                            $('select[name="account"]').change(function () {
                                $.ajax({
                                    method: "POST",
                                    url: "/lk/_PaymentArticles",
                                    data: { account: $(this).val(), article: "@Model.article" }
                                }).done(function (data) {
                                    $('#article_wrapper').html(data);
                                });
                            });
                        </script>

                    </div>
                    <div class="date-wrap">
                        <div class="form-group">
                            <label>@Resources.Resource.PeriodFrom</label>
                            @Html.TextBoxFor(x => x.begin, new { @class = "datapick datapicker_1", @autocomplete = "off" })
                        </div>
                        <div class="form-group">
                            <label>@Resources.Resource.Before</label>
                            @Html.TextBoxFor(x => x.end, new { @class = "datapick datapicker_2", @autocomplete = "off" })
                        </div>
                    </div>
                    if (Request.Cookies["lang"] != null && Request.Cookies["lang"].Value == "en")
                    {
                        <script>
                            $('.datapicker_1')
                                .datepicker({
                                    firstDay: 1,
                                    dateFormat: 'dd.mm.yy'
                                });
                            $('.datapicker_2')
                                .datepicker({
                                    firstDay: 1,
                                    dateFormat: 'dd.mm.yy'
                                });
                        </script>
                    }
                    else
                    {
                        <script>
                            $('.datapicker_1')
                                .datepicker({
                                    monthNames: [
                                        'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь',
                                        'Октябрь', 'Ноябрь', 'Декабрь'
                                    ],
                                    dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
                                    firstDay: 1,
                                    dateFormat: 'dd.mm.yy'
                                });
                            $('.datapicker_2')
                                .datepicker({
                                    monthNames: [
                                        'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь',
                                        'Октябрь', 'Ноябрь', 'Декабрь'
                                    ],
                                    dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
                                    firstDay: 1,
                                    dateFormat: 'dd.mm.yy'
                                });
                        </script>
                    }
                    <div class="wrap-block">
                        <div class="select-wrap" id="article_wrapper">
                            @Html.Partial("_PaymentArticles", Model)
                        </div>
                        <button type="submit" class="btn btn-grad btn-sm" form="form_filter">
                            @Resources.Resource.Search
                        </button>
                    </div>
                }


            </div>
            @if (Model.Items != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Resources.Resource.PaymentNumber
                            </th>
                            <th>
                                @Resources.Resource.DateOperation
                            </th>
                            <th>
                                <p class="caption">
                                    <span>@Resources.Resource.Description</span>
                                </p>
                            </th>
                            <th>
                                @Resources.Resource.AmountComing
                            </th>
                            <th>
                                @Resources.Resource.AmountConsumption
                            </th>
                            <th>
                                @Resources.Resource.AccountBalance
                            </th>
                            <th>
                                @Resources.Resource.StatusTable
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            var desc = item.ObjectName;
                            switch (item.PaymentArticle)
                            {
                                case "Пополнение счета":
                                    desc = Resources.Resource.AticleReplenishment;
                                    break;
                                case "Открытие инвест программы":
                                    desc = Resources.Resource.AticleOpeningTheInvestmentProgram + " " + item.OrderProgramObjectName;
                                    break;
                                case "Открытие накопит программы":
                                    desc = Resources.Resource.AticleOpeningTheCamulativeProgram + " " + "Camulative";
                                    break;
                                case "Закрытие инвест программы":
                                    desc = Resources.Resource.AticleClosingTheInvestmentProgram + " " + item.OrderProgramObjectName;
                                    break;
                                case "Вывод средств":
                                    desc = Resources.Resource.AticleWithdrawal;
                                    break;
                                case "Перевод партнеру":
                                    desc = Resources.Resource.AticleTransferToPartner + " (" + (string.IsNullOrWhiteSpace(item.OrderLogin) ? item.OrderPersonalId.ToString() : item.OrderLogin) + ")";
                                    break;
                                case "Пополнение/изменение инвест программы":
                                    desc = Resources.Resource.AticleChangeInvestment;
                                    break;
                                case "Пополнение инвест программы":
                                    desc = Resources.Resource.AticleReplenishInvest;
                                    break;
                                case "Бонусная инвест программа":
                                    desc = Resources.Resource.AticleBonusInvestment;
                                    break;
                                case "Начисление процентов":
                                    desc = Resources.Resource.AticlePercent;
                                    break;
                                case "Перевод на лицевой счет":
                                    desc = Resources.Resource.AticleTransferToInnerAccount;
                                    break;
                                case "Реферальное вознаграждение":
                                    desc = Resources.Resource.AticleRefReward + " " + item.OrderObjectName;
                                    break;
                                case "Вознаграждение по накопительной программе":
                                    desc = Resources.Resource.AticleCamulativeReward + " " + item.OrderObjectName;
                                    break;
                                case "Вознаграждение со структуры":
                                    desc = Resources.Resource.AticleStructReward + " " + item.OrderObjectName;
                                    break;
                                case "Благотворительность":
                                    desc = Resources.Resource.AticleCharity + " " + item.OrderObjectName;
                                    break;
                            }
                            string status = "";
                            switch (item.PaymentStatus)
                            {
                                case "Оплачен":
                                    status = Resources.Resource.StatusPayed;
                                    break;
                                case "Не оплачен":
                                    status = Resources.Resource.StatusNotPayed;
                                    break;
                                case "Не обработана":
                                    status = Resources.Resource.StatusInProgress;
                                    break;
                                case "Обработана":
                                    status = Resources.Resource.StatusCompleted;
                                    break;
                                case "Отменена":
                                    status = Resources.Resource.StatusCancel;
                                    break;
                            }

                        <tr>
                            <td data-text="@Resources.Resource.PaymentNumber">
                                @item.PaymentNumber
                            </td>
                            <td data-text="@Resources.Resource.DateOperation">
                                @item.PaymentDate.Value.ToString("dd.MM.yyyy HH:mm")
                            </td>
                            <td data-text="@Resources.Resource.Description">
                                @desc
                            </td>
                            <td data-text="@Resources.Resource.AmountComing">
                                    @{
                                    if (item.PaymentDirection == "Приход")
                                    {
                                        @((item.PaymentSum ?? 0).ToString("N2"))
                                    }
                                }
                            </td>
                            <td data-text="@Resources.Resource.AmountConsumption">
                                    @{
                                    if (item.PaymentDirection == "Расход")
                                    {
                                        @((item.PaymentSum ?? 0).ToString("N2"))
                                    }
                                }
                            </td>
                            <td data-text="@Resources.Resource.AccountBalance">
                                    @((item.AccountBalance ?? 0).ToString("N2"))
                                </td>
    
                                <td data-text="@Resources.Resource.StatusTable">
                                    @status
                                </td>
    
                            </tr>
                            }
                    </tbody>
                </table>
            }
                        @if (Model.PageInfo != null && Model.PageInfo.TotalPages > 1)
            {
                <div style="margin-bottom: 20px;">
                    @Html.PageLinks(Model.PageInfo, null, x => Url.Action("history", new
                    {
                        account = Model.account,
                        begin = Model.begin == null ? null : Model.begin.Value.ToShortDateString(),
                        end = Model.end == null ? null : Model.end.Value.ToShortDateString(),
                        article = Model.article,
                        page = x
                    }))
                </div>
            }
            <div class="history-total">
                <div>
                    <p>
                        @Resources.Resource.AmountPeriod
                    </p>
                    <b>$ @Model.TotalSumPrihod.ToString("N2")</b>
                </div>
                <div>
                    <p>
                        @Resources.Resource.AmountPeriod2
                    </p>
                    <b>$ @Model.TotalSumRashod.ToString("N2")</b>
                </div>
                <div>
                    <p>
                        @Resources.Resource.Saldo
                    </p>
                    <b>$ @Model.Saldo.ToString("N2")</b>
                </div>
            </div>
        </div>
    </div>
</div>