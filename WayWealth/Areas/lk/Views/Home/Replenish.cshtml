@model WayWealth.Areas.lk.ViewModels.Home.ReplenishView
@using KBTech.Integration.Merchant.CoinBase
@{
    ViewBag.Title = Resources.Resource.TopAccountTitle;
    Layout = "~/Areas/lk/Views/Shared/_Layout.cshtml";
    TempData.Keep();
}

<div class="white-bg h-100">
    <div class="container">
        <div class="perevod-block">
            <h2 class="inner-title">
                @Resources.Resource.TopAccountTitle
            </h2>
            <div class="error-msg" style="margin: 0 0 30px 0;">
                @Html.ValidationSummary(false)
            </div>
            @using (Html.BeginForm("Replenish", "Home", FormMethod.Post, new { id = "form_vivod" }))
            {
                <div class="valuta">
                    <div>
                        <img src="~/Areas/lk/Content/img/valuta-1.png" alt="">
                        <p>Bitcoin</p>
                        <b>$ @(Convert.ToDecimal(TempData["btc_usd"]).ToString("N2"))</b>
                    </div>
                    <div>
                        <img src="~/Areas/lk/Content/img/valuta-2.png" alt="">
                        <p>Ethereum</p>
                        <b>$ @(Convert.ToDecimal(TempData["eth_usd"]).ToString("N2"))</b>
                    </div>
                    <div>
                        <img src="~/Areas/lk/Content/img/valuta-3.png" alt="">
                        <p>Litecoin</p>
                        <b>$ @(Convert.ToDecimal(TempData["ltc_usd"]).ToString("N2"))</b>
                    </div>
                    <div>
                        <img src="~/Areas/lk/Content/img/valuta-4.png" alt="">
                        <p>Bitcoin Cash</p>
                        <b>$ @(Convert.ToDecimal(TempData["bch_usd"]).ToString("N2"))</b>
                    </div>
                    <div>
                        <img src="~/Areas/lk/Content/img/valuta-5.png" alt="">
                        <p>Ripple</p>
                        <b>$ @(Convert.ToDecimal(TempData["xrp_usd"]).ToString("N2"))</b>
                    </div>
                </div>
                <div class="popolnit flex">
                    <div class="form-group">
                        <label>@Resources.Resource.Amount</label>
                        <div class="form-group-symbol flex">
                            @Html.TextBoxFor(x => x.Sum, new { @class = "sum_input" })
                            <span class="symbol">$</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>@Resources.Resource.Currency</label>
                        <div class="form-group-select">
                            @Html.DropDownListFor(x => x.Currency, new SelectListItem[]
                        {
                            new SelectListItem { Text = "Bitcoin",Value = "BTC"},
                            new SelectListItem { Text = "Ethereum",Value = "ETH"},
                            new SelectListItem { Text = "Litecoin",Value = "LTC"},
                            new SelectListItem { Text = "BitcoinCash",Value = "BCH"},
                            new SelectListItem { Text = "Ripple",Value = "XRP"},
                        }, Resources.Resource.NotChosen, new { id = "crypptoaccount", @class = "myslimSelect5" })
                            <i class="ion-ios-arrow-down"></i>
                        </div>

                        <script>
                            $('.myslimSelect5').change(function () {
                                calc();
                            });

                            $('.sum_input').on('input change paste', calc);

                            function calc() {
                                $('.crypptoconvert').html('');
                                var s = $('.sum_input').val().replace(',', '.');
                                var rate = 0.0;

                                var curr = $("option:selected", $('#crypptoaccount')).attr('value');

                                if (curr == 'BTC') {
                                    rate = @(TempData["usd_btc"].ToString().Replace(',','.')) * 1.0;
                                }
                                else if (curr == 'ETH') {
                                    rate = @(TempData["usd_eth"].ToString().Replace(',', '.')) * 1.0;
                                }
                                else if (curr == 'LTC') {
                                    rate = @(TempData["usd_ltc"].ToString().Replace(',', '.')) * 1.0;
                                }
                                else if (curr == 'BCH') {
                                    rate = @(TempData["usd_bch"].ToString().Replace(',', '.')) * 1.0;
                                }
                                else if (curr == 'XRP') {
                                    rate = @(TempData["usd_xrp"].ToString().Replace(',', '.')) * 1.0;
                                }

                                var total = Math.round(s * rate * 1000000) / 1000000;
                                if (total > 0) {
                                    $('.crypptoconvert').html(total + ' ' + '<span>' + curr + '</span>');
                                }
                            }
                        </script>
                    </div>
                    <p class="crypptoconvert"></p>
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-grad" form="form_vivod">
                        @Resources.Resource.TopUpAccount
                    </button>
                </div>
            }
        </div>
    </div>
</div>