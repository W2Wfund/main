@model WayWealth.Areas.lk.ViewModels.Home.SettingsView
@{
    ViewBag.Title = Resources.Resource.ProfileTitle;
    Layout = "~/Areas/lk/Views/Shared/_Layout.cshtml";
    TempData.Keep();
    var Countries = TempData["Countries"] as IEnumerable<W2W.ModelKBT.Entities.DictItem>;
    var culture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
}
<div class="profile-page">
    <p class="page-title">
        <img src="~/Areas/lk/Content/img/toolbar-icon-6.png" alt="">@Resources.Resource.ProfileTitle
    </p>

    @using (Html.BeginForm("Settings", "Home", FormMethod.Post, new { @id = "form-base", @class = "form-base" }))
    {
        <p class="form-title">@Resources.Resource.BaseInfo</p>
        <div class="flex @(Model.VerificationStatus == "Верифицирован" ? "veritif-on" : "") @(Model.VerificationStatus == "На проверке" ? "veritif-on proverka" : "")">
            <div class="login">
                <p>@Resources.Resource.Login</p>
                <div class="input">
                    @Html.TextBoxFor(x => x.Login)
                    @*<div class="required-icon"></div>*@
                </div>
            </div>
            <div class="ava">
                @if (!string.IsNullOrWhiteSpace(Model.Image))
                {
                    <img src="@Url.Action("img", "home", new { area = "", id=Model.Image })" alt="">
                }
                <div class="info">
                    <div class="btn-wrap">
                        <div class="fileupload">
                            <i>@Resources.Resource.DownAva</i>
                            <input type="file" class="upload_ava" accept="image/jpeg, image/png">
                        </div>
                        <a class="delete_ava">@Resources.Resource.RemoveAvatar</a>
                    </div>
                    <p>@Resources.Resource.AvaRequired</p>
                </div>
            </div>
            <div class="verif">
                <p>@Resources.Resource.IdentityVerification</p>
                @if (Model.VerificationStatus == "Верифицирован")
                {
                    <b>@Resources.Resource.Verified</b>
                }
                else if (Model.VerificationStatus == "На проверке")
                {
                    <i>@Resources.Resource.OnCheck</i>
                }
                else
                {
                    <i>@Resources.Resource.NotConfirmed</i>
                }
            </div>
        </div>
        <div class="flex2">
            <div class="input2 mr20">
                <p>@Resources.Resource.LastName</p>
                @Html.TextBoxFor(x => x.LastName)
                <div class="required-icon"></div>
            </div>
            <div class="input2 mr20">
                <p>@Resources.Resource.FirstName</p>
                @Html.TextBoxFor(x => x.FirstName)
                <div class="required-icon"></div>
            </div>
            <div class="input2">
                <p>@Resources.Resource.MiddleName</p>
                @Html.TextBoxFor(x => x.MiddleName)
            </div>
        </div>
        <div class="flex2 flex3">
            <div class="input2 mr20">
                <p>@Resources.Resource.Gender</p>

                @Html.DropDownListFor(x => x.Gender, new SelectListItem[]
                          {
                    new SelectListItem { Text = Resources.Resource.Male, Value = "Мужской"},
                    new SelectListItem { Text = Resources.Resource.Female, Value = "Женский"},

                          }, Resources.Resource.NotChosen, new { @class = "myslimSelect7" })
                <script>
                    var mySlimSelect = new SlimSelect({
                        select: '.myslimSelect7',
                        showSearch: false
                    })
                </script>
                <style>
                    .myslimSelect7 {
                        max-width: 100%;
                    }
                </style>
            </div>
            <div class="input2 mr20">
                <p>@Resources.Resource.Country</p>
                @Html.DropDownListFor(x => x.Country, new SelectList(Countries, "Value", "ObjectName"),
                         Resources.Resource.NotChosen, new { @class = "myslimSelect8" })





                <script>
                    var mySlimSelect = new SlimSelect({
                        select: '.myslimSelect8',
                        showSearch: false
                    })
                </script>
                <style>
                    .myslimSelect8 {
                        max-width: 100%;
                    }
                </style>
            </div>
            <div class="input2">
                <p>@Resources.Resource.City</p>
                @Html.TextBoxFor(x => x.City)
            </div>
        </div>
        <div class="flex2 flex4">
            <div class="input2 mr20">
                <p>@Resources.Resource.DateBirth</p>
                @Html.TextBoxFor(x => x.BirthDate, "{0:dd.MM.yyyy}", new { @class = "datapick datapicker_1" })
            </div>
            <div class="input2">
                <script type="text/javascript" src="~/Areas/lk/Content/js/jquery.inputmask.bundle.min.js"></script>
                <p>@Resources.Resource.Phone</p>
                @Html.TextBoxFor(x => x.PhoneNumber)
                <script>
                    //$('#PhoneNumber').inputmask("+9 999 999 99 99");
                    //$('#PhoneNumber').inputmask("+9{1,3} 9{3,4} 999 99 99");
                    //$('#PhoneNumber').inputmask("+L{3,16}");
                    Inputmask({ regex: "\\+[\\d-\\(\\)]{0,16}" }).mask('#PhoneNumber');
                </script>
            </div>
        </div>
        <div class="flex2 flex5">
            <div class="input2">
                <p>@Resources.Resource.LinkSoc</p>
                @Html.TextBoxFor(x => x.SocNetworkLink)
            </div>
        </div>
        @*if (!ViewData.ModelState.IsValid)
        {
            <div style="text-align:center;color:red;margin-top:10px">
                @Html.ValidationSummary(false)
            </div>
        }*@
        <button type="submit" class="page-link" form="form-base">
            <span data-text="@Resources.Resource.Save">@Resources.Resource.Save</span>
        </button>
    }
    <div class="flex jcsb mb50">
        @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post, new { id = "form_pass", @class = "form_pass" }))
        {
            <p class="caption">@Resources.Resource.ChangePassword</p>
            <div class="input">
                <p>@Resources.Resource.Password</p>
                @Html.PasswordFor(x => x.NewPassword)
            </div>
            <div class="input">
                <p>@Resources.Resource.ConfirmPassword</p>
                @Html.PasswordFor(x => x.PasswordRepeat)
            </div>
            <button type="submit" class="page-link" form="form_pass">
                <span data-text="@Resources.Resource.ChangePassword">@Resources.Resource.ChangePassword</span>
            </button>
        }
        @using (Html.BeginForm("ChangeEmail", "Home", FormMethod.Post, new { id = "form_email", @class = "form_email" }))
        {
            <p class="caption">@Resources.Resource.EmailChange</p>
            <div class="input">
                <p>@Resources.Resource.Email</p>
                @Html.TextBoxFor(x => x.Email)
            </div>
            <div class="input">
                <p>@Resources.Resource.Password</p>
                @Html.PasswordFor(x => x.Password)
            </div>
            <button type="submit" class="page-link" form="form_email">
                <span data-text="@Resources.Resource.EmailChange">@Resources.Resource.EmailChange</span>
            </button>
        }
    </div>

    @using (Html.BeginForm("SaveWallets", "home", FormMethod.Post, new { area = "lk", id = "wallets-form", @class = "wallets-form", style="margin-bottom:15px;" }))
    {
        <div class="wallets">
            <p class="caption">@Resources.Resource.CryptoWallets</p>
            <ul>
                <li class="active">
                    <a data-id="#AccountBitcoin">
                        <img src="~/Areas/lk/Content/img/valuta-1.png" alt=""><span>Bitcoin</span><i></i>
                    </a>
                    @Html.HiddenFor(x => x.AccountBitcoin, new { id = "AccountBitcoin" })
                </li>
                <li>
                    <a data-id="#AccountEthereum">
                        <img src="~/Areas/lk/Content/img/valuta-2.png" alt=""><span>Ethereum</span><i></i>
                    </a>
                    @Html.HiddenFor(x => x.AccountEthereum, new { id = "AccountEthereum" })
                </li>
                <li>
                    <a data-id="#AccountLitecoin">
                        <img src="~/Areas/lk/Content/img/valuta-3.png" alt=""><span>Litecoin</span><i></i>
                    </a>
                    @Html.HiddenFor(x => x.AccountLitecoin, new { id = "AccountLitecoin" })
                </li>
                <li>
                    <a data-id="#AccountBitcoinCash">
                        <img src="~/Areas/lk/Content/img/valuta-4.png" alt=""><span>Bitcoin Cash</span><i></i>
                    </a>
                    @Html.HiddenFor(x => x.AccountBitcoinCash, new { id = "AccountBitcoinCash" })
                </li>
                <li>
                    <a data-id="#AccountRipple">
                        <img src="~/Areas/lk/Content/img/valuta-5.png" alt=""><span>Ripple</span><i></i>
                    </a>
                    @Html.HiddenFor(x => x.AccountRipple, new { id = "AccountRipple" })
                </li>
            </ul>
            <input type="text" class="wallets-inp" value="@Model.AccountBitcoin" data-id="#AccountBitcoin">
        </div>
        <button type="submit" class="page-link" form="wallets-form">
            <span data-text="@Resources.Resource.Save">@Resources.Resource.Save</span>
        </button>
    }



    @if (Model.VerificationStatus == "Не подтвержден" || string.IsNullOrWhiteSpace(Model.VerificationStatus))
    {
        <div class="verification-block">
            @using (Html.BeginForm("Verification", "Home", FormMethod.Post, new { id = "passport_form", enctype = "multipart/form-data" }))
            {
                <p class="title">@Resources.Resource.IdentityVerification</p>
                <div class="flex">
                    <div class="file-input mr20">
                        <p>@Resources.Resource.NoFile</p>
                        <div class="wrap">
                            <img id="passport_1" src="" alt="">
                            <a class="cancel-fileupload"></a>
                            <div class="file">
                                <i>@Resources.Resource.PassportHomepage</i>
                                @Html.TextBoxFor(x => x.Passport1, new { type = "file" })
                            </div>
                        </div>
                    </div>
                    <div class="file-input w315 mr20">
                        <p>@Resources.Resource.NoFile</p>
                        <div class="wrap">
                            <img id="passport_2" src="" alt="">
                            <a class="cancel-fileupload"></a>
                            <div class="file">
                                <i>@Resources.Resource.PassportReg</i>
                                @Html.TextBoxFor(x => x.Passport2, new { type = "file" })
                            </div>
                        </div>
                    </div>
                    <div class="file-input">
                        <p>@Resources.Resource.NoFile</p>
                        <div class="wrap">
                            <img id="passport_3" src="" alt="">
                            <a class="cancel-fileupload"></a>
                            <div class="file">
                                <i>@Resources.Resource.PassportSelfi</i>
                                @Html.TextBoxFor(x => x.Passport3, new { type = "file" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="desc">
                    <p>@Resources.Resource.PassportLbl1</p>
                    <p>@Resources.Resource.PassportLbl2</p>
                </div>
                <button type="submit" class="page-link" form="passport_form">
                    <span data-text="@Resources.Resource.ToSend">@Resources.Resource.ToSend</span>
                </button>
            }
        </div>
    }
</div>